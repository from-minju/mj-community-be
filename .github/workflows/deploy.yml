name: Backend CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --push \
            -t ghcr.io/${{ github.repository_owner }}/mj-community-be:latest .

  deploy:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    steps:
      - name: Prepare SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 --decode > key.pem
          chmod 600 key.pem

      - name: Deploy to EC2
        run: |
          HOST=${{ secrets.EC2_HOST }}
          USER=${{ secrets.EC2_USER }}

          ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "
            echo 'PORT=${{ secrets.EC2_PORT }}' > ~/mj-community-be/.env && \
            echo 'HOST=${{ secrets.EC2_HOST }}' >> ~/mj-community-be/.env && \
            echo 'DB_HOST=${{ secrets.DB_HOST }}' >> ~/mj-community-be/.env && \
            echo 'DB_USER=${{ secrets.DB_USER }}' >> ~/mj-community-be/.env && \
            echo 'DB_PASSWORD=${{ secrets.DB_PASSWORD }}' >> ~/mj-community-be/.env && \
            echo 'DB_NAME=${{ secrets.DB_NAME }}' >> ~/mj-community-be/.env && \
            echo 'AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}' >> ~/mj-community-be/.env && \
            echo 'AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}' >> ~/mj-community-be/.env && \
            echo 'AWS_REGION=${{ secrets.AWS_REGION }}' >> ~/mj-community-be/.env && \
            echo 'S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}' >> ~/mj-community-be/.env && \

            docker rm -f mj-community-be || true && \

            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GHCR_PAT }} && \

            docker pull ghcr.io/${{ github.repository_owner }}/mj-community-be:latest && \

            docker run -d \
              --name mj-community-be \
              --env-file ~/mj-community-be/.env \
              -p 3000:3000 \
              ghcr.io/${{ github.repository_owner }}/mj-community-be:latest
          "
